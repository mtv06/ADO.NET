// <auto-generated />
using System;
using BackendProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendProject.Migrations
{
    [DbContext(typeof(DBTestContext))]
    partial class DBTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendProject.Models.Brigade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrigadeName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BrigadeNumber")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Brigade");
                });

            modelBuilder.Entity("BackendProject.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ClaimNumber")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerRequisites")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ListWorks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("BackendProject.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BrigadeConfirmation")
                        .HasColumnType("bit");

                    b.Property<int?>("BrigadeId")
                        .IsRequired();

                    b.Property<string>("BrigadeMark")
                        .HasColumnType("text");

                    b.Property<string>("BrigadeNote")
                        .HasColumnType("text");

                    b.Property<int?>("ClaimId")
                        .IsRequired();

                    b.Property<DateTime>("TaskDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TaskNumber")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("TaskStaging")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("ClaimId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("BackendProject.Models.Task", b =>
                {
                    b.HasOne("BackendProject.Models.Brigade", "Brigade")
                        .WithMany()
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BackendProject.Models.Claim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
